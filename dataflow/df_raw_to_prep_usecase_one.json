{
	"name": "df_raw_to_prep_usecase_one",
	"properties": {
		"folder": {
			"name": "usecase1/prep"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_sqldb_mini_project",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "ds_sqldb_mini_project",
						"type": "DatasetReference"
					},
					"name": "source2"
				},
				{
					"dataset": {
						"referenceName": "ds_sqldb_mini_project",
						"type": "DatasetReference"
					},
					"name": "source3"
				},
				{
					"dataset": {
						"referenceName": "ds_sqldb_mini_project",
						"type": "DatasetReference"
					},
					"name": "source4"
				},
				{
					"dataset": {
						"referenceName": "ds_sqldb_mini_project",
						"type": "DatasetReference"
					},
					"name": "source5"
				},
				{
					"dataset": {
						"referenceName": "ds_sqldb_mini_project",
						"type": "DatasetReference"
					},
					"name": "source6"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_sqldb_mini_project",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "ds_sqldb_mini_project",
						"type": "DatasetReference"
					},
					"name": "sink2"
				},
				{
					"dataset": {
						"referenceName": "ds_sqldb_mini_project",
						"type": "DatasetReference"
					},
					"name": "sink3"
				},
				{
					"dataset": {
						"referenceName": "ds_sqldb_mini_project",
						"type": "DatasetReference"
					},
					"name": "sink4"
				},
				{
					"dataset": {
						"referenceName": "ds_sqldb_mini_project",
						"type": "DatasetReference"
					},
					"name": "sink5"
				},
				{
					"dataset": {
						"referenceName": "ds_sqldb_mini_project",
						"type": "DatasetReference"
					},
					"name": "sink6"
				}
			],
			"transformations": [],
			"scriptLines": [
				"source(output(",
				"          userid as string,",
				"          username as string,",
				"          email as string,",
				"          role as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source1",
				"source(output(",
				"          taskid as string,",
				"          taskname as string,",
				"          description as string,",
				"          assignedto as string,",
				"          projectid as string,",
				"          deadline as string,",
				"          status as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source2",
				"source(output(",
				"          projectid as string,",
				"          projectname as string,",
				"          description as string,",
				"          createdby as string,",
				"          startdate as string,",
				"          enddate as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source3",
				"source(output(",
				"          revenueid as string,",
				"          projectid as string,",
				"          amount as string,",
				"          currency as string,",
				"          date as string,",
				"          description as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source4",
				"source(output(",
				"          reviewid as string,",
				"          projectid as string,",
				"          clientname as string,",
				"          rating as string,",
				"          reviewtext as string,",
				"          createdat as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source5",
				"source(output(",
				"          assignmentid as string,",
				"          projectid as string,",
				"          userid as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source6",
				"source1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     recreate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1",
				"source2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     recreate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink2",
				"source3 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     recreate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink3",
				"source4 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     recreate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink4",
				"source5 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     recreate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink5",
				"source6 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink6"
			]
		}
	}
}